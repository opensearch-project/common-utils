/*
 *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License").
 *   You may not use this file except in compliance with the License.
 *   A copy of the License is located at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file. This file is distributed
 *   on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 *   express or implied. See the License for the specific language governing
 *   permissions and limitations under the License.
 */

buildscript {
    ext {
        es_group = "org.opensearch"
        es_version = '7.10.3'
        opendistroVersion = '1.15.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            url = 's3://search-vemsarat/'
            credentials(AwsCredentials) {
                accessKey = System.env.AWS_ACCESS_KEY_ID ?: findProperty('aws_access_key_id')
                secretKey = System.env.AWS_SECRET_ACCESS_KEY ?: findProperty('aws_secret_access_key')
            }
        }
        jcenter()
    }

    dependencies {
        classpath "${es_group}.gradle:build-tools:${es_version}-SNAPSHOT"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.diffplug.gradle.spotless" version "3.26.1"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    jcenter()
}

group 'com.amazon.opendistroforelasticsearch.commons'

sourceCompatibility = 1.8

version = "${opendistroVersion}.0"

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    maven {
        url = 's3://search-vemsarat/'
        credentials(AwsCredentials) {
            accessKey = System.env.AWS_ACCESS_KEY_ID ?: findProperty('aws_access_key_id')
            secretKey = System.env.AWS_SECRET_ACCESS_KEY ?: findProperty('aws_secret_access_key')
        }
    }
}


dependencies {
    compileOnly "org.opensearch.client:opensearch-rest-high-level-client:${es_version}-SNAPSHOT"
    testCompile "org.opensearch.test:framework:${es_version}-SNAPSHOT"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

spotless {
    java {
        removeUnusedImports()
        importOrder 'java', 'javax', 'org', 'com'
        licenseHeaderFile 'spotless.license.java'

        eclipse().configFile rootProject.file('.eclipseformat.xml')
    }
}

shadowJar {
    classifier = null
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        shadow(MavenPublication) {
            project.shadow.component(it)
            groupId = 'com.amazon.opendistroforelasticsearch'
            artifactId = 'common-utils'

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "Open Distro for OpenSearch Common Utils"
                packaging = "jar"
                url = "https://github.com/opendistro-for-elasticsearch/common-utils"
                description = "Open Distro for OpenSearch Common Utils"
                scm {
                    connection = "scm:git@github.com:opendistro-for-elasticsearch/common-utils.git"
                    developerConnection = "scm:git@github.com:opendistro-for-elasticsearch/common-utils.git"
                    url = "git@github.com:opendistro-for-elasticsearch/common-utils.git"
                }
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "amazonwebservices"
                        organization = "Amazon Web Services"
                        organizationUrl = "https://aws.amazon.com"
                    }
                }
            }
        }
    }

    gradle.startParameter.setShowStacktrace(ShowStacktrace.ALWAYS)
    gradle.startParameter.setLogLevel(LogLevel.DEBUG)

    signing {
        required { gradle.taskGraph.hasTask("publishShadowPublicationToSonatype-stagingRepository") }
        sign publishing.publications.shadow
    }
}
